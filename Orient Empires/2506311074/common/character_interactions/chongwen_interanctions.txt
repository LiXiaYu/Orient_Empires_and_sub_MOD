chongwen_ward_interaction = {
	category = interaction_category_friendly
	hidden = yes
	ai_targets = {
		ai_recipients = liege
	}
	ai_targets = {
		ai_recipients = peer_vassals
		max = 10
	}
	ai_targets = {
		ai_recipients = vassals
		max = 10
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	desc = offer_ward_interaction_desc
	is_shown = {
		scope:recipient = { 
			primary_title = {
				this = title:d_chongwen_university
			}
		}
	}
	send_name = SEND_PROPOSAL
	ai_frequency = 2
	ai_will_do = {
		base = 100		
	}
	populate_actor_list = {
		scope:actor = {
			if = {
				limit = {
					is_adult = no
					age > 10
					num_of_relation_guardian = 0
				}
				add_to_list = characters
			}
			every_courtier = {
				limit = {
					is_adult = no
					age > 10
					num_of_relation_guardian = 0
				}
				add_to_list = characters
			}
		}
	}

	greeting = positive
	notification_text = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:actor = scope:secondary_actor
					NOT = { scope:recipient = scope:recipient }
				}
				desc = EDUCATE_ACTOR_REQUEST
			}
			triggered_desc = {
				trigger = {
					scope:actor = scope:secondary_actor
					scope:recipient = scope:recipient
				}
				desc = EDUCATE_ACTOR_PERSONALLY_REQUEST
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:recipient = scope:recipient }
					NOT = { scope:actor = scope:secondary_actor }
				}
				desc = EDUCATE_ACTOR_CHILD_REQUEST
			}
			triggered_desc = {
				trigger = {
					scope:recipient = scope:recipient
					NOT = { scope:actor = scope:secondary_actor }
				}
				desc = EDUCATE_ACTOR_CHILD_PERSONALLY_REQUEST
			}
		}
	}
	
	prompt = {
		first_valid = {	
			triggered_desc = {
				trigger = {
					exists = scope:secondary_actor
					scope:actor = scope:recipient
				}
				desc = EDUCATE_SELECT_YOUR_GUARDIAN
			}
			triggered_desc = {
				trigger = {
					exists = scope:secondary_actor
					scope:secondary_actor = {
						is_adult = no
					}
				}
				desc = EDUCATE_SELECT_THEIR_GUARDIAN
			}
			desc = EDUCATE_SELECT_YOUR_WARD
		}
	}
	

	is_valid_showing_failures_only = {
		custom_description = {
			text = character_to_guard_exists
			subject = scope:recipient
			scope:recipient = {
				OR = {
					any_courtier = {
						is_adult = yes
						num_of_relation_ward < 11
					}
					AND = {
						is_adult = yes
						num_of_relation_ward < 11
					}
				}
			}
		}
		custom_description = {
			text = character_to_educate_exists
			object = scope:actor
			scope:actor = {
				OR = {
					any_courtier = {
						is_adult = no
						num_of_relation_guardian = 0
					}
					AND = {
						is_adult = no
						num_of_relation_guardian = 0
					}
				}
			}
		}
		scope:recipient = {
			is_imprisoned = no
			is_diplomatically_available = yes
		}
		scope:actor.gold >= 200
		trigger_if = {
			limit = {
				exists = scope:recipient
			}
			scope:recipient = {
				is_imprisoned = no
				is_diplomatically_available = yes
			}
		}
	}
	
	
	on_accept = {
		scope:secondary_actor = {
			save_scope_as = ward
			scope:recipient = { save_scope_as = guardian }
			scope:actor = { save_scope_as = ward_liege }
			scope:recipient = { save_scope_as = guardian_liege }
		}
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = give_xia_official_notification
				right_icon = scope:recipient
				pay_short_term_gold = {
					gold = 200
					target = scope:recipient
				}
			}
		}
		offer_ward_interaction_effect = yes

		scope:actor = {
			if = {
				limit = { NOT = { this = scope:recipient } }
				trigger_event = char_interaction.0080
			}
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0081
		}
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:education_hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}	
	ai_accept = {
		base = 0

		# AI should always accept children the Player has jurisdiction over
		# You can always send your own child away
		modifier = {
			add = 200
			scope:secondary_actor = {
				is_adult = no
				is_child_of = scope:actor
			}
			desc = AI_YOUR_OWN_CHILD
		}
		# Including you
		modifier = {
			add = 200
			scope:secondary_actor = scope:actor
			desc = AI_EDUCATE_YOU
		}
		# You can always send your courtier's child away
		modifier = {
			add = 200
			scope:secondary_actor = {
				is_adult = no
				NOT = { is_child_of = scope:actor }
				is_courtier_of = scope:actor
			}
			#But only if you are of interest to the educator. To educate the courtier of a count is of no interest to a foreign emperor.
			scope:recipient = {
				OR = {
					is_of_major_or_minor_interest_trigger = { CHARACTER = scope:actor }
					is_of_major_or_minor_interest_trigger = { CHARACTER = scope:secondary_actor }
					highest_held_title_tier <= scope:actor.highest_held_title_tier
				}
			}
			desc = AI_YOUR_COURTIER_CHILD
		}

		#Weak hook: extra points
		modifier = {
			scope:education_hook = yes
			add = 100
			scope:actor = { NOT = { has_strong_hook = scope:recipient } }
			desc = SCHEME_WEAK_HOOK_USED
		}
		
		modifier = { # Respect the liege
			add = 50
			scope:recipient = { target_is_liege_or_above = scope:actor }
			desc = EDUCATE_CHILD_ACTOR_IS_MY_LIEGE
		}

		#If the child is theirs they are more likely to accept
		modifier = {
			add = 100
			scope:secondary_actor = {
				is_child_of = scope:recipient
				is_adult = no
			}
			desc = AI_MY_CHILD
		}

		#If the child is the educator's child they should be more likely to accept
		modifier = {
			add = 100
			scope:secondary_actor = {
				is_adult = no
				is_child_of = scope:recipient
			}
			desc = AI_MY_CHILD
		}

		#Their opinion of you matters!
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}

		#Make less likely that they accept if they are of another culture
		modifier = {
			add = -10
			trigger = {
				scope:secondary_actor = {
					has_same_culture_group_as = scope:recipient
					NOT = { has_same_culture_as = scope:recipient }
				}
			}
			desc = AI_NOT_CULTURE
		}
		
		modifier = {
			add = -20
			trigger = {
				scope:secondary_actor = {
					NOT = { has_same_culture_group_as = scope:recipient }
				}
			}
			desc = AI_NOT_CULTURE
		}

		#Less likely if they don't like other religion
		modifier = {
			add = {
				value = -5
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_hostile_level
							}
						}
					}
					subtract = 5
				}
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_evil_level
							}
						}
					}
					subtract = 10
				}
			}
			trigger = {
				NOT = { scope:recipient.faith = scope:actor.faith }
			}
			desc = AI_RELIGION
		}

		#The better the educator is at a skill, the less likely they are to accept
		compare_modifier = {
			trigger = {
				scope:recipient = {
					diplomacy >= 10
				}
				NOT = { scope:actor = scope:secondary_actor }
			}
			target = scope:recipient
			value = diplomacy
			step = 4
			multiplier = -0.5
			offset = -2
			max = 0
			desc = AI_GUARDIAN_SKILL_DIPLOMACY
		}
		compare_modifier = {
			trigger = {
				scope:recipient = {
					martial >= 10
				}
				NOT = { scope:actor = scope:secondary_actor }
			}
			target = scope:recipient
			value = martial
			step = 4
			multiplier = -0.5
			offset = -2
			max = 0
			desc = AI_GUARDIAN_SKILL_MARTIAL
		}
		compare_modifier = {
			trigger = {
				scope:recipient = {
					stewardship >= 10
				}
				NOT = { scope:actor = scope:secondary_actor }
			}
			target = scope:recipient
			value = stewardship
			step = 4
			multiplier = -0.5
			offset = -2
			max = 0
			desc = AI_GUARDIAN_SKILL_STEWARDSHIP
		}
		compare_modifier = {
			trigger = {
				scope:recipient = {
					intrigue >= 10
				}
				NOT = { scope:actor = scope:secondary_actor }
			}
			target = scope:recipient
			value = intrigue
			step = 4
			multiplier = -0.5
			offset = -2
			max = 0
			desc = AI_GUARDIAN_SKILL_INTRIGUE
		}
		compare_modifier = {
			trigger = {
				scope:recipient = {
					learning >= 10
				}
				NOT = { scope:actor = scope:secondary_actor }
			}
			target = scope:recipient
			value = learning
			step = 4
			multiplier = -0.5
			offset = -2
			max = 0
			desc = AI_GUARDIAN_SKILL_LEARNING
		}

		#The better you as an educator is at a skill, the more likely they are to accept
		compare_modifier = {
			trigger = {
				AND = {
					scope:actor = scope:secondary_actor
					scope:actor = {
						diplomacy >= 11
					}
				}
			}
			target = scope:actor
			value = diplomacy
			step = 4
			multiplier = 0.75
			offset = -5
			min = 0
			desc = AI_GUARDIAN_SKILL_DIPLOMACY
		}
		compare_modifier = {
			trigger = {
				AND = {
					scope:actor = scope:secondary_actor
					scope:actor = {
						martial >= 11
					}
				}
			}
			target = scope:actor
			value = martial
			step = 4
			multiplier = 0.75
			offset = -5
			min = 0
			desc = AI_GUARDIAN_SKILL_MARTIAL
		}
		compare_modifier = {
			trigger = {
				AND = {
					scope:actor = scope:secondary_actor
					scope:actor = {
						stewardship >= 11
					}
				}
			}
			target = scope:actor
			value = stewardship
			step = 4
			multiplier = 0.75
			offset = -5
			min = 0
			desc = AI_GUARDIAN_SKILL_STEWARDSHIP
		}
		compare_modifier = {
			trigger = {
				AND = {
					scope:actor = scope:secondary_actor
					scope:actor = {
						intrigue >= 11
					}
				}
			}
			target = scope:actor
			value = intrigue
			step = 4
			multiplier = 0.75
			offset = -5
			min = 0
			desc = AI_GUARDIAN_SKILL_INTRIGUE
		}
		compare_modifier = {
			trigger = {
				AND = {
					scope:actor = scope:secondary_actor
					scope:actor = {
						learning >= 11
					}
				}
			}
			target = scope:actor
			value = learning
			step = 4
			multiplier = 0.75
			offset = -5
			min = 0
			desc = AI_GUARDIAN_SKILL_LEARNING
		}

		#More/Less likely based on difference in rank between actor and recipient
		modifier = {
			add = 20
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = 1
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = 30
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = 2
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = 40
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = 3
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = 50
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = 4
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = 60
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = 5
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = -20
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = -1
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = -30
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = -2
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = -40
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = -3
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = -50
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = -4
				}
			}
			desc = AI_RANK_DIFF
		}
		modifier = {
			add = -60
			scope:actor = {
				tier_difference = {
					target = scope:recipient
					value = -5
				}
			}
			desc = AI_RANK_DIFF
		}
		
		modifier = {
			add = intimidated_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
	}
	send_option = {
		is_shown = {
			OR = {
				scope:recipient = {
					OR = {
						primary_title = {
							this = title:d_chongwen_university
						}
						any_realm_province = {
							has_university_building_trigger = yes
						}
					}
				}
				scope:actor = {
					this = scope:secondary_actor
					any_realm_province = {
						has_university_building_trigger = yes
					}
				}
			}
		}
		starts_enabled = { always = yes	}
		flag = send_to_university
		localization = EDUCATION_UNIVERSITY
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
}
#######################
give_to_court_interaction = {
	category = interaction_category_friendly
	hidden = yes
	desc = give_to_court_interaction_desc

	send_name = SEND_PROPOSAL

	redirect = {
		scope:recipient = {
			if = {
				limit = {
					exists = employer
					NOT = { employer = scope:recipient }
				}
				save_scope_as = secondary_recipient
				employer = {
					save_scope_as = recipient
				}
			}
		}		
	}

	populate_actor_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_adult = yes
					
					NOR = {
						is_theocratic_lessee = yes
						is_consort_of = scope:actor
					}
				}
				add_to_list = characters
			}
		}
	}

	greeting = positive

	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			primary_title = {
				this = title:d_chongwen_university
			}
		}
		trigger_if = {
			limit = {
				exists = scope:secondary_actor
			}
			scope:secondary_actor = {
				is_adult = yes
				NOR = {
					is_theocratic_lessee = yes
					is_consort_of = scope:actor
				}
			}
		}
	}
	

	is_valid_showing_failures_only = {
		scope:recipient = {
			is_imprisoned = no
			is_diplomatically_available = yes
		}
		trigger_if = {
			limit = {
				exists = scope:secondary_actor
			}
			scope:secondary_actor = {
				is_imprisoned = no
				is_diplomatically_available = yes
			}
		}
	}
	
	
	on_accept = {
		scope:recipient = {
			add_courtier = scope:secondary_actor
		}
	}
	
	auto_accept = yes
		
	send_option = {
		is_shown = {
			exists = scope:secondary_actor
			exists = scope:secondary_recipient
			NOT = { scope:secondary_actor.culture = scope:secondary_recipient.culture }
		}
		flag = convert_culture
		localization = EDUCATE_CHILD_OPTION_CONVERT_CULTURE
		current_description = {
			first_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:secondary_actor
						scope:secondary_actor = { is_adult = no }
					}
					desc = EDUCATE_CHILD_OPTION_CONVERT_CULTURE_TT_TO_RECIPIENT
				}
				triggered_desc = {
					trigger = {
						exists = scope:secondary_recipient
						scope:secondary_recipient = { is_adult = no }
					}
					desc = EDUCATE_CHILD_OPTION_CONVERT_CULTURE_TT_TO_ACTOR
				}
			}
		}
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
}
################################
need_to_court_interaction = {
	category = interaction_category_friendly
	cooldown = { years = 1 }
	hidden = yes
	desc = need_to_court_interaction_desc

	send_name = SEND_PROPOSAL

	redirect = {
		scope:recipient = {
			if = {
				limit = {
					exists = employer
					NOT = { employer = scope:recipient }
				}
				save_scope_as = secondary_recipient
				employer = {
					save_scope_as = recipient
				}
			}
		}		
	}

	populate_recipient_list = {
		scope:recipient = {
			every_courtier = {
				limit = {
					is_adult = yes
					
					NOR = {
						is_theocratic_lessee = yes
						is_consort_of = scope:recipient
					}
				}
				add_to_list = characters
			}
		}
	}

	greeting = positive

	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			primary_title = {
				this = title:d_chongwen_university
			}
		}
		trigger_if = {
			limit = {
				exists = scope:secondary_recipient
			}
			scope:secondary_recipient = {
				is_adult = yes
				NOR = {
					is_theocratic_lessee = yes
					is_consort_of = scope:recipient
				}
			}
		}
	}
	

	is_valid_showing_failures_only = {
		scope:recipient = {
			is_imprisoned = no
			is_diplomatically_available = yes
		}
		trigger_if = {
			limit = {
				exists = scope:secondary_recipient
			}
			scope:secondary_recipient = {
				is_imprisoned = no
				is_diplomatically_available = yes
			}
		}
	}
	
	
	on_accept = {
		scope:actor = {
			add_courtier = scope:secondary_recipient
		}
	}
	
	auto_accept = yes
		
	send_option = {
		is_shown = {
			exists = scope:secondary_actor
			exists = scope:secondary_recipient
			NOT = { scope:secondary_actor.culture = scope:secondary_recipient.culture }
		}
		flag = convert_culture
		localization = EDUCATE_CHILD_OPTION_CONVERT_CULTURE
		current_description = {
			first_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:secondary_actor
						scope:secondary_actor = { is_adult = no }
					}
					desc = EDUCATE_CHILD_OPTION_CONVERT_CULTURE_TT_TO_RECIPIENT
				}
				triggered_desc = {
					trigger = {
						exists = scope:secondary_recipient
						scope:secondary_recipient = { is_adult = no }
					}
					desc = EDUCATE_CHILD_OPTION_CONVERT_CULTURE_TT_TO_ACTOR
				}
			}
		}
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
}